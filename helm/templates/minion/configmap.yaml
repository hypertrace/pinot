{{- if .Values.minion.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "pinot.minion.fullname" . }}-config
  labels:
    app: {{ include "pinot.name" . }}
    chart: {{ include "pinot.chart" . }}
    component: {{ .Values.minion.name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  pinot-minion.conf: |-
    pinot.minion.port={{ .Values.minion.port }}
    pinot.set.instance.id.to.hostname=true
    {{- if .Values.minion.persistence.enabled }}
    dataDir={{ .Values.minion.persistence.mountPath }}
    {{- end }}
    {{- if eq .Values.cluster.storage.scheme "gs" }}
    instance.enable.split.commit=true
    storage.factory.class.gs=org.apache.pinot.plugin.filesystem.GcsPinotFS
    storage.factory.gs.projectId={{ .Values.cluster.storage.gs.projectId }}
    storage.factory.gs.gcpKey={{ .Values.cluster.storage.gs.gcpKey }}
    segment.fetcher.protocols=file,http,gs
    segment.fetcher.gs.class=org.apache.pinot.common.utils.fetcher.PinotFSSegmentFetcher
    {{- end }}
    {{- if eq .Values.cluster.storage.scheme "s3" }}
    storage.factory.class.s3=org.apache.pinot.plugin.filesystem.S3PinotFS
    storage.factory.s3.region={{ .Values.cluster.storage.s3.region }}
    segment.fetcher.protocols=file,http,s3
    segment.fetcher.s3.class=org.apache.pinot.common.utils.fetcher.PinotFSSegmentFetcher
    storage.factory.s3.disableAcl=false
    {{- end }}
{{- end }}
