{{- if .Values.controller.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "pinot.controller.fullname" . }}-config
  labels:
    app: {{ include "pinot.name" . }}
    chart: {{ include "pinot.chart" . }}
    component: {{ .Values.controller.name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  pinot-controller.conf: |-
    controller.helix.cluster.name={{ .Values.cluster.name }}
    controller.port={{ .Values.controller.port }}
    {{- if .Values.controller.vip.enabled }}
    controller.vip.host={{ include "pinot.controller.fullname" . }}
    controller.vip.port={{ .Values.controller.service.port }}
    {{- end }}
    controller.retention.frequencyInSeconds={{ int .Values.controller.retention.frequencyInSeconds }}
    controller.task.scheduler.enabled={{ .Values.controller.taskScheduler.enabled }}
    controller.task.frequencyInSeconds={{ int .Values.controller.taskScheduler.frequencyInSeconds }}
    controller.zk.str={{ include "zookeeper.path" . }}
    pinot.set.instance.id.to.hostname=true
    controller.data.dir={{ .Values.controller.data.dir }}
    controller.deleted.segments.retentionInDays={{ int .Values.controller.deleted.segments.retentionInDays }}
    {{- if eq .Values.cluster.storage.scheme "gs" }}
    {{- if .Values.cluster.splitCommitEnabled }}
    controller.allow.hlc.tables=false
    controller.enable.split.commit=true
    {{- end }}
    controller.local.temp.dir={{ .Values.controller.local.temp.dir }}
    pinot.controller.storage.factory.class.gs=org.apache.pinot.plugin.filesystem.GcsPinotFS
    pinot.controller.storage.factory.gs.projectId={{ .Values.cluster.storage.gs.projectId }}
    pinot.controller.storage.factory.gs.gcpKey={{ .Values.cluster.storage.gs.gcpKey }}
    pinot.controller.segment.fetcher.protocols=file,http,gs
    pinot.controller.segment.fetcher.gs.class=org.apache.pinot.common.utils.fetcher.PinotFSSegmentFetcher
    {{- end }}
    {{- if eq .Values.cluster.storage.scheme "s3" }}
    pinot.controller.storage.factory.class.s3=org.apache.pinot.plugin.filesystem.S3PinotFS
    pinot.controller.storage.factory.s3.region={{ .Values.cluster.storage.s3.region }}
    controller.local.temp.dir={{ .Values.controller.local.temp.dir }}
    pinot.controller.segment.fetcher.protocols=file,http,s3
    pinot.controller.segment.fetcher.s3.class=org.apache.pinot.common.utils.fetcher.PinotFSSegmentFetcher
    pinot.controller.storage.factory.s3.disableAcl=false
    {{- end }}
{{- end }}
