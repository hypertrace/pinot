fullnameOverride: ""
nameOverride: ""

image:
  registry: ""
  repository: hypertrace/pinot
  pullPolicy: IfNotPresent
  tagOverride: ""

imagePullSecrets: []

initContainers: []

extraVolumes: []

extraVolumeMounts: []

extraEnvs: []

cluster:
  name: pinot
  storage:
    scheme: file
  splitCommitEnabled: true

controller:
  name: controller
  component: controller
  enabled: true
  port: 9000
  replicaCount: 1

  retention:
    frequencyInSeconds: 21600

  vip:
    enabled: false

  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 2Gi
    mountPath: /var/pinot/controller/data
    storageClass: "standard"
    existingClaim: ""

  data:
    dir: /var/pinot/controller/data

  local:
    temp:
      dir: /var/pinot/controller/data/temp

  deleted:
    segments:
      retentionInDays: 2

  offline:
    segment:
      interval:
        checker:
          frequencyPeriod: 3h

  taskScheduler:
    enabled: false
    frequencyInSeconds: 3600

  jvmOpts: "-Xms128M -Xmx320M"

  log4j2ConfFile: /opt/pinot/conf/pinot-controller-log4j2.xml
  pluginsDir: /opt/pinot/plugins

  service:
    annotations: {}
    clusterIP: ""
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    type: ClusterIP
    port: 9000
    nodePort: ""

  external:
    enabled: false
    type: LoadBalancer
    port: 9000

  resources:
    requests:
      cpu: "0.1"
      memory: 400Mi

  podLabels: {}

  podAnnotations: {}

  updateStrategy:
    type: RollingUpdate

  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3

  readinessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3

  startupProbe: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  securityContext: {}

  hostNetwork: false

  serviceAccount:
    create: true
    name: ""
    annotations: {}

  terminationGracePeriodSeconds: 60

  servicemonitor:
    enabled: false
    interval: 15s
    secure: false
    tlsConfig: {}

  podDisruptionBudget:
    enabled: false
    maxUnavailable: 1
    minAvailable: ""

  jmx:
    enabled: false
    port: 7022
    opts: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=7022 -Dcom.sun.management.jmxremote.rmi.port=7022 -Djava.rmi.server.hostname=127.0.0.1"

  prometheus:
    jmx:
      enabled: false
      port: 7071
      image:
        repository: hypertrace/prometheus-jmx-exporter
        tag: 0.1.4
        pullPolicy: IfNotPresent
      resources:
        requests:
          cpu: "0.25"
          memory: "256Mi"

  storageclass:
    enabled: false
    name: pinot-controller
    annotations: {}
    provisioner: kubernetes.io/gce-pd
    reclaimPolicy: Delete
    volumeBindingMode: Immediate
    parameters:
      type: pd-standard

  logging:
    level: warn

broker:
  name: broker
  enabled: true
  port: 8099
  replicaCount: 1

  timeoutMs: 60000

  jvmOpts: "-Xms128M -Xmx320M"

  log4j2ConfFile: /opt/pinot/conf/pinot-broker-log4j2.xml
  pluginsDir: /opt/pinot/plugins

  routingTable:
    builderClass: random

  service:
    annotations: {}
    clusterIP: ""
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    type: ClusterIP
    port: 8099
    nodePort: ""

  external:
    enabled: false
    type: LoadBalancer
    port: 8099

  resources:
    requests:
      cpu: "0.1"
      memory: 400Mi

  podLabels: {}

  podAnnotations: {}

  updateStrategy:
    type: RollingUpdate

  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3

  readinessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3

  startupProbe: {}

  nodeSelector: {}

  affinity: {}

  tolerations: []

  securityContext: {}

  hostNetwork: false

  serviceAccount:
    create: true
    name: ""
    annotations: {}

  terminationGracePeriodSeconds: 30

  servicemonitor:
    enabled: false
    interval: 15s
    secure: false
    tlsConfig: {}

  podDisruptionBudget:
    enabled: false
    maxUnavailable: 1
    minAvailable: ""

  jmx:
    enabled: false
    port: 7023
    opts: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=7023 -Dcom.sun.management.jmxremote.rmi.port=7023 -Djava.rmi.server.hostname=127.0.0.1"

  prometheus:
    jmx:
      enabled: false
      port: 7072
      image:
        repository: hypertrace/prometheus-jmx-exporter
        tag: 0.1.4
        pullPolicy: IfNotPresent
      resources:
        requests:
          cpu: "0.25"
          memory: "256Mi"

  logging:
    level: warn

minion:
  name: minion
  enabled: true
  port: 9514
  replicaCount: 1

  timeoutMs: 60000

  jvmOpts: "-Xms128M -Xmx320M"

  persistence:
    enabled: false
    accessMode: ReadWriteOnce
    size: 2Gi
    mountPath: /var/pinot/minion/data
    storageClass: "standard"

  log4j2ConfFile: /opt/pinot/conf/pinot-minion-log4j2.xml
  pluginsDir: /opt/pinot/plugins

  service:
    annotations: {}
    clusterIP: ""
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    type: ClusterIP
    port: 9514
    nodePort: ""

  external:
    enabled: false
    type: LoadBalancer
    port: 9514

  resources:
    requests:
      cpu: "0.1"
      memory: 400Mi

  podLabels: {}

  podAnnotations: {}

  updateStrategy:
    type: RollingUpdate

  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3

  readinessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3

  nodeSelector: {}

  affinity: {}

  tolerations: []

  securityContext: {}

  hostNetwork: false

  serviceAccount:
    create: true
    name: ""
    annotations: {}

  terminationGracePeriodSeconds: 30

  servicemonitor:
    enabled: false
    interval: 15s
    secure: false
    tlsConfig: {}

  podDisruptionBudget:
    enabled: false
    maxUnavailable: 1
    minAvailable: ""

  jmx:
    enabled: false
    port: 7025
    opts: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=7025 -Dcom.sun.management.jmxremote.rmi.port=7025 -Djava.rmi.server.hostname=127.0.0.1"

  prometheus:
    jmx:
      enabled: false
      port: 7074
      image:
        repository: hypertrace/prometheus-jmx-exporter
        tag: 0.1.4
        pullPolicy: IfNotPresent
      resources:
        requests:
          cpu: "0.25"
          memory: "256Mi"

  logging:
    level: warn

server:
  name: server
  enabled: true

  ports:
    netty: 8098
    admin: 8097
    grpc: 8090

  replicaCount: 1

  dataDir: /var/pinot/server/data/index
  segmentTarDir: /var/pinot/server/data/segment

  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 2Gi
    mountPath: /var/pinot/server/data
    storageClass: "standard"

  jvmOpts: "-Xms128M -Xmx320M"

  log4j2ConfFile: /opt/pinot/conf/pinot-server-log4j2.xml
  pluginsDir: /opt/pinot/plugins

  service:
    annotations: {}
    clusterIP: ""
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    type: ClusterIP
    nodePort: ""

  resources:
    requests:
      cpu: "0.1"
      memory: 400Mi

  podLabels: {}

  podAnnotations: {}

  updateStrategy:
    type: RollingUpdate

  livenessProbe:
    enabled: false
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3

  readinessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3

  startupProbe: {}

  nodeSelector: {}

  affinity: {}

  tolerations: []

  securityContext: {}

  hostNetwork: false

  serviceAccount:
    create: true
    name: ""
    annotations: {}

  terminationGracePeriodSeconds: 60

  servicemonitor:
    enabled: false
    interval: 15s
    secure: false
    tlsConfig: {}

  podDisruptionBudget:
    enabled: false
    maxUnavailable: 1
    minAvailable: ""

  jmx:
    enabled: false
    port: 7024
    opts: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=7024 -Dcom.sun.management.jmxremote.rmi.port=7024 -Djava.rmi.server.hostname=127.0.0.1"

  prometheus:
    jmx:
      enabled: false
      port: 7073
      image:
        repository: hypertrace/prometheus-jmx-exporter
        tag: 0.1.4
        pullPolicy: IfNotPresent
      resources:
        requests:
          cpu: "0.25"
          memory: "256Mi"

  storageclass:
    enabled: false
    name: pinot-server
    annotations: {}
    provisioner: kubernetes.io/gce-pd
    reclaimPolicy: Delete
    volumeBindingMode: Immediate
    parameters:
      type: pd-standard

  logging:
    level: warn

  tiers:
    default: {}
    tier1: {}

  tagJobEnabled: false
  tagJobWaitforSideCar: true
  tagJob:
    image:
      repository: curlimages/curl
      tag: latest

servicemanager:
  name: servicemanager
  enabled: false
  port: 9090
  replicaCount: 1

  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 2Gi
    mountPath: /var/pinot/servicemanager/data
    storageClass: "standard"

  data:
    dir: /var/pinot/servicemanager/data

  jvmOpts: "-Xms128M -Xmx320M"

  log4j2ConfFile: /opt/pinot/conf/pinot-servicemanager-log4j2.xml
  pluginsDir: /opt/pinot/plugins

  service:
    enabled: true
    annotations: {}
    clusterIP: ""
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    type: ClusterIP
    port: 9090
    nodePort: ""

  resources:
    requests:
      cpu: "0.1"
      memory: 400Mi

  podLabels: {}

  podAnnotations: {}

  updateStrategy:
    type: RollingUpdate

  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3

  readinessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3

  nodeSelector: {}

  tolerations: []

  affinity: {}

  securityContext: {}

  serviceAccount:
    create: true
    name: ""

  terminationGracePeriodSeconds: 30

  podDisruptionBudget:
    enabled: true
    maxUnavailable: 1
    minAvailable: ""

zookeeper:
  url: ""
  port: 2181
  path: "/pinot"
  retries: 10
  retryInterval: 5
  image:
    repository: "hypertrace/kafka"
    tag: "0.2.4"
    pullPolicy: IfNotPresent
    pullSecret: ""
