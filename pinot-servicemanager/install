#!/bin/sh
# install script used only in building the docker image, but not at runtime.
# This uses relative path so that you can change the home dir without editing this file.
# This also trims dependencies to only those used at runtime.
set -eux

mkdir etc

cat > etc/log4j2.properties <<-'EOF'
appenders=console
appender.console.type=Console
appender.console.name=STDOUT
appender.console.layout.type=PatternLayout
appender.console.layout.pattern=%d{ABSOLUTE} %-5p [%t] %C{2} (%F:%L) - %m%n
rootLogger.level=warn
rootLogger.appenderRefs=stdout
rootLogger.appenderRef.stdout.ref=STDOUT
# https://github.com/apache/incubator-pinot/pull/5001
logger.reflections.name=org.reflections
logger.reflections.level=off
# Ensure we can see timing messages
logger.servicemanager.name=org.apache.pinot.tools.admin.command.StartServiceManagerCommand
logger.servicemanager.level=info
EOF

cat > etc/pinot-broker.conf <<-'EOF'
pinot.broker.client.queryPort=8099
pinot.broker.routing.table.builder.class=random
pinot.preferHostnameInDefaultInstanceId=true
pinot.set.instance.id.to.hostname=true
pinot.broker.timeoutMs=60000
pinot.service.role=BROKER
EOF

# We set the following at startup:
# * controller.data.dir
cat > etc/pinot-controller.conf <<-'EOF'
controller.helix.cluster.name=hypertrace-views
controller.port=9000
# TODO: see if this can be CLI arg or ENV
controller.zk.str=kafka-zookeeper:2181
pinot.set.instance.id.to.hostname=true
pinot.service.role=CONTROLLER
EOF

# We set the following at startup:
# * pinot.server.instance.dataDir
# * pinot.server.instance.segmentTarDir
cat > etc/pinot-server.conf <<-'EOF'
pinot.server.netty.port=8098
pinot.server.adminapi.port=8097
pinot.set.instance.id.to.hostname=true
pinot.server.instance.realtime.alloc.offheap=true
pinot.server.query.executor.timeout=60000
pinot.service.role=SERVER
EOF

echo "*** Image build complete"
