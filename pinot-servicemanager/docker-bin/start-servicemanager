#!/bin/sh
# ENTRYPOINT script that starts Pinot
#
# This intentionally locates config using the current working directory, in order to consolidate
# Dockerfile instructions to WORKDIR
set -eu

# Default variables so that the script doesn't bomb out on absence
JAVA_OPTS=${JAVA_OPTS:-"-Xms256M -Xmx512M -XX:+ExitOnOutOfMemoryError"}
ZK_ADDRESS=${ZK_ADDRESS:-zookeeper:2181}

# Apply one-time deferred configuration that relies on ENV variables
#
sed -i "s/\(controller.zk.str\)=.*/\1=${ZK_ADDRESS}/g" etc/pinot-controller.conf
# TODO: Revert this when relative paths are allowed
#         https://github.com/apache/incubator-pinot/issues/5975
sed -i "s~\./~${PWD}/~g" etc/*.conf

# Try to install schemas while service is coming up
test -d schemas && install-schema &

echo Starting Pinot Service Manager
# TODO: link to pinot issue why we need internal access
# NOTE: '-classpath classes' because it is faster to start up with a flat classpath
exec java \
  --add-opens java.base/jdk.internal.ref=ALL-UNNAMED \
  -classpath classes \
  $JAVA_OPTS \
  -Dlog4j.configurationFile=etc/log4j2.properties \
  -Dapp.name=pinot-admin \
  -Dapp.pid=$$ \
  -Dapp.home=$PWD \
  -Dbasedir=$PWD \
  org.apache.pinot.tools.admin.PinotAdministrator \
  StartServiceManager -clusterName hypertrace-views \
  -zkAddress $ZK_ADDRESS -port 7098 \
  -bootstrapConfigPaths $(ls etc/*.conf)
